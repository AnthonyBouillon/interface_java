/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import model.Model_product;
import product_management.Product;
import subheading_management.Subheading;
import subheading_management.Subheading_DAO;
import supplier_management.Supplier;
import supplier_management.Supplier_DAO;


public class Interface_product extends javax.swing.JFrame {

    Model_product model_product;
    Product product;
    Supplier supplier;
    Supplier_DAO supplier_crud;
    Subheading subheading;
    Subheading_DAO subheading_crud;
    JFileChooser chooser;
    Border border_original;
    String button_choice;

    /**
     * Creates new form Interface_users
     */
    public Interface_product() {
        initComponents();
        try {
            // Instance des classes
            this.model_product = new Model_product();
            this.product = new Product();
            this.supplier = new Supplier();
            this.supplier_crud = new Supplier_DAO();
            this.subheading = new Subheading();
            this.subheading_crud = new Subheading_DAO();
            // Instance d'une classe qui permet à l'utilisateur de choisir un fichié
            this.chooser = new JFileChooser();
            // Récupération de la couleur d'origine de la bordure
            this.border_original = name.getBorder();
            // Implémentation du model
            jTable.setModel(model_product);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Une erreur est survenue, l'application à des données manquant");
        }
        // Le programme n'est pas arrêter, seul la fenetre disparait
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        name = new javax.swing.JTextField();
        price_bt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        photo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        taxe = new javax.swing.JTextField();
        error_photo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        combo_subheading = new javax.swing.JComboBox<>();
        combo_suppliers = new javax.swing.JComboBox<>();
        cancel = new javax.swing.JButton();
        title_form = new javax.swing.JLabel();
        validate = new javax.swing.JButton();
        error_form = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion des produits");
        setPreferredSize(new java.awt.Dimension(980, 540));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 9", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jLabel1.setText("LISTE DES PRODUITS");

        update.setText("Modifier");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        add.setText("Ajouter");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setText("Supprimer");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel5.setText("Description longue");

        jLabel7.setText("Prix hors taxe");

        jLabel4.setText("Description courte");

        description.setColumns(20);
        description.setRows(5);
        jScrollPane2.setViewportView(description);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                .addGap(1, 1, 1)))
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(name)
                    .addComponent(price_bt))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(price_bt)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        jLabel6.setText("Photo");

        photo.setText("Parcourir");
        photo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoActionPerformed(evt);
            }
        });

        jLabel8.setText("Quantité");

        jLabel9.setText("Tva");

        error_photo.setBackground(new java.awt.Color(255, 0, 0));
        error_photo.setForeground(new java.awt.Color(255, 0, 0));
        error_photo.setMaximumSize(new java.awt.Dimension(10, 10));
        error_photo.setMinimumSize(new java.awt.Dimension(5, 5));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(error_photo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(photo, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(quantity)
                    .addComponent(taxe))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(photo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(error_photo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taxe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo_suppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(combo_subheading, 0, 91, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_subheading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_suppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        cancel.setText("ANNULER");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        title_form.setText("------------------------------------------------------------------------------------------------------- FORMULAIRE ----------------------------------------------------------------------------------------------------------------");

        validate.setText("VALIDER");
        validate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateActionPerformed(evt);
            }
        });

        error_form.setBackground(new java.awt.Color(255, 0, 0));
        error_form.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(58, Short.MAX_VALUE)
                        .addComponent(title_form, javax.swing.GroupLayout.PREFERRED_SIZE, 952, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(398, 398, 398))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(error_form, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(257, 257, 257))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(validate, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(538, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(update)
                    .addComponent(delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title_form, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(error_form, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(cancel)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(780, Short.MAX_VALUE)
                    .addComponent(validate)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        setSize(980, 870);
        button_choice = "Ajouter";
    }//GEN-LAST:event_addActionPerformed
    /**
     * Vérifie si l'identifiant existe
     * -----------------------------------------------------------------------
     * Puis affiche les valeurs à modifier
     *
     * @param evt
     */
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        button_choice = "Modifier";
        if (this.id_product() == -1) {
            JOptionPane.showMessageDialog(null, "Sélectionner un produit à modifier");
        } else {
            try {
                setSize(980, 870);
                // champ(liste.ligne.valeur)
                name.setText(model_product.product_list().get(this.n_line_product()).getShort_description());
                description.setText(model_product.product_list().get(this.n_line_product()).getLong_description());
                price_bt.setText(Double.toString(model_product.product_list().get(this.n_line_product()).getPrice_bt()));
                quantity.setText(Integer.toString(model_product.product_list().get(this.n_line_product()).getQuantity()));
                taxe.setText(Double.toString(model_product.product_list().get(this.n_line_product()).getTaxe()));
                combo_suppliers.setSelectedItem(model_product.product_list().get(this.n_line_product()).getId_supplier());
                combo_subheading.setSelectedItem(model_product.product_list().get(this.n_line_product()).getId_subheading());
                chooser.setName(model_product.product_list().get(this.n_line_product()).getPhoto());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Une erreur est survenue, impossible d'afficher les valeurs à modifier");
            }
        }
    }//GEN-LAST:event_updateActionPerformed
    /**
     * Vérifie si l'identifiant du produit existe
     * -----------------------------------------------------------------------
     * Puis supprime la ligne dans la liste et dans la base de données
     *
     * @param evt
     */
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            if (this.id_product() != -1) {
                product.setId(this.id_product());
                model_product.delete_product(this.n_line_product(), product);
            } else {
                JOptionPane.showMessageDialog(null, "Sélectionner un produit à supprimer");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Une erreur est survenue lors de la suppression du produit");
        }
    }//GEN-LAST:event_deleteActionPerformed
    /**
     * Récupère le chemin ainsi que le nom de l'image existant dans la base de
     * données
     *
     * @param evt
     */
    private void photoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoActionPerformed
        // Ouvre une fenetre qui permet de parcourir l'arborescence du pc
        chooser.showOpenDialog(photo);
        try {
            if (button_choice.equals("Modifier")) {
                chooser.setName(model_product.product_list().get(this.n_line_product()).getPhoto());
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Une erreur est survenue, impossible de récupérer le chemin de l'image dans la base de données" + '\n' + "Veuillez en choisir une nouvelle");
        }
    }//GEN-LAST:event_photoActionPerformed
    /**
     * Méthode exécutant dès l'ouverture de l'application
     * ---------------------------------------------------------------------
     * Affiche les fournisseurs et les sous-rubriques dans les combobox
     *
     * @param evt
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // Affiche la liste des fournisseurs dans la combo box
            for (Supplier list_supplier : supplier_crud.read()) {
                combo_suppliers.addItem(list_supplier.getName());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Une erreur est survenue lors de l'affichage des fournisseurs");
        }

        try {
            // Affiche la liste des sous rubriques dans la combo box
            for (Subheading list_subheading : subheading_crud.read()) {
                combo_subheading.addItem(list_subheading.getName());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Une erreur est survenue lors de l'affichage des sous-rubriques");
        }
    }//GEN-LAST:event_formWindowOpened
    /**
     * Met à vide les champs, les erreurs affichés et la taille de la fenetre
     *
     * @param evt
     */
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.reset_form();
    }//GEN-LAST:event_cancelActionPerformed
    /**
     * Toutes les vérifications se font lors de la validation du formulaire,
     * lors de l'ajout et de la modification d'un produit.
     *
     * @param evt
     */
    private void validateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateActionPerformed
        // Expression régulière
        Pattern PATTERN_VARCHAR = Pattern.compile("^[A-Za-záàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔ ÖÕÚÙÛÜÝŸÆŒ0-9-]+{1,255}$");
        Pattern PATTERN_TEXT = Pattern.compile("^[A-Za-záàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕ ÚÙÛÜÝŸÆŒ0-9-]+{1,1500}$");
        Pattern PATTERN_INT = Pattern.compile("^[0-9]+$");
        Pattern PATTERN_DOUBLE = Pattern.compile("^[0-9]+(\\.[0-9]+)?$");
        // Compare l'expression régulière au texte
        Matcher VALIDATE_NAME = PATTERN_VARCHAR.matcher(name.getText());
        Matcher VALIDATE_DESCRIPTION = PATTERN_TEXT.matcher(description.getText());
        Matcher VALIDATE_PRICEBT = PATTERN_DOUBLE.matcher(price_bt.getText());
        Matcher VALIDATE_QUANTITY = PATTERN_INT.matcher(quantity.getText());
        Matcher VALIDATE_TAXE = PATTERN_DOUBLE.matcher(taxe.getText());

        int id_folder = 0;
        int compteur_error = 0;
        // Vérifie si l'identifiant du produit existe
        if (button_choice.equals("Modifier")) {
            if (this.id_product() == -1) {
                JOptionPane.showMessageDialog(null, "Veuillez sélectionner un produit dans la liste");
                compteur_error++;
            } else {
                product.setId(this.id_product());
                id_folder = id_product();
            }
        }
        try {
            // Récupère le dernier identifiant du produit dans la liste + 1, afin de nommer le nouveau dossier
            id_folder = model_product.product_list().get(model_product.product_list().size() - 1).getId();
            id_folder = id_folder + 1;
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        // Vérification des valeurs récupèré pour l'ajout ou la modification
        if (this.id_supplier() == -1) {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner un fournisseur");
            compteur_error++;
        } else {
            product.setId_supplier(this.id_supplier());
        }

        if (this.id_subheading() == -1) {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner une sous-rubrique");
            compteur_error++;
        } else {
            product.setId_subheading(this.id_subheading());
        }

        if (!VALIDATE_NAME.find()) {
            name.setBorder(BorderFactory.createLineBorder(Color.red));
            compteur_error++;
        } else {
            product.setShort_description(name.getText());
            name.setBorder(border_original);
        }

        if (!VALIDATE_DESCRIPTION.find()) {
            description.setBorder(BorderFactory.createLineBorder(Color.red));
            compteur_error++;
        } else {
            product.setLong_description(description.getText());
            description.setBorder(border_original);
        }

        if (!VALIDATE_PRICEBT.find()) {
            price_bt.setBorder(BorderFactory.createLineBorder(Color.red));
            compteur_error++;
        } else {
            product.setPrice_bt(Double.parseDouble(price_bt.getText()));
            price_bt.setBorder(border_original);
        }

        if (!VALIDATE_QUANTITY.find()) {
            quantity.setBorder(BorderFactory.createLineBorder(Color.red));
            compteur_error++;
        } else {
            product.setQuantity(Integer.parseInt(quantity.getText()));
            quantity.setBorder(border_original);
        }

        if (!VALIDATE_TAXE.find()) {
            taxe.setBorder(BorderFactory.createLineBorder(Color.red));
            compteur_error++;
        } else {
            product.setTaxe(Double.parseDouble(taxe.getText()));
            taxe.setBorder(border_original);
        }

        /**
         * Enregistre l'image dans un dossier fraichement créé
         * --------------------------------------------------------------------
         * Vérification : extension de l'image
         */
        try {
            if (chooser.getSelectedFile() == null && button_choice.equals("Modifier")) {
                //System.out.println(path);
                product.setPhoto(chooser.getName());
                //System.out.println(product.getPhoto());
            } else {
                if (chooser.getSelectedFile() != null) {
                    String extension = chooser.getSelectedFile().getName().substring(chooser.getSelectedFile().getName().lastIndexOf("."));
                    if (extension.equals(".pdf") || extension.equals(".jpeg") || extension.equals(".jpg") || extension.equals(".png")) {
                        String path = Paths.get("").toAbsolutePath().toString();
                        product.setPhoto(path + "\\" + chooser.getSelectedFile().getName());
                        error_form.setText("");
                        // Créer un nouveau dossier (l'identifiant du produit est le nom du dossier
                        File folder = new File(path + "\\Image\\" + Integer.toString(id_folder));
                        folder.mkdirs();
                        // Ajoute le fichier dans le nouveau dossier
                        File dst = new File(path + "\\Image\\" + id_folder + "\\" + chooser.getSelectedFile().getName());
                        dst.createNewFile();

                    } else {
                        error_form.setText("Formats autorisés : pdf, png, jpeg, jpg");
                    }
                } else {

                    error_form.setText("Ajouter une photo");
                    compteur_error++;

                }

            }

        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }

        // --------------------Fin des vérifications---------------------------
        if (button_choice.equals("Ajouter") && compteur_error == 0) {
            try {
                model_product.create_product(product);
                this.reset_form();

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(null, "Une erreur est survenue lors de l'ajout du produit");
            }
        } else if (button_choice.equals("Modifier") && compteur_error == 0) {
            try {
                model_product.update_product(product);
                reset_form();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(null, "Une erreur est survenue lors de la modification du produit");
            }
        }
    }//GEN-LAST:event_validateActionPerformed
    /**
     *
     * @return le numéro de la ligne sélectionné
     */
    public Integer n_line_product() {
        return jTable.getSelectedRow();
    }

    /**
     * Retourne l'identifiant du produit de la ligne sélectionnée,
     * ------------------------------------------------------------------------
     * si elle existe pas, retourne -1
     *
     * @return l'identifiant du produit
     */
    public Integer id_product() {
        int id_product;
        try {
            id_product = model_product.product_list().get(jTable.getSelectedRow()).getId();
        } catch (Exception e) {
            id_product = -1;
        }
        return id_product;
    }

    /**
     * Retourne l'identifiant du fournisseur qui a été sélectionnée,
     * ------------------------------------------------------------------------
     * si elle existe pas, retourne -1
     *
     * @return l'identifiant du fournisseur
     */
    public Integer id_supplier() {
        int id_supplier;
        try {
            id_supplier = supplier_crud.read().get(combo_suppliers.getSelectedIndex()).getId();
        } catch (SQLException ex) {
            id_supplier = -1;
        }
        return id_supplier;
    }

    /**
     * Retourne l'identifiant de la sous-rubrique qui a été sélectionnée,
     * ------------------------------------------------------------------------
     * si elle existe pas, retourne -1
     *
     * @return l'identifiant de la sous-rubrique
     */
    public Integer id_subheading() {
        int id_subheading;
        try {
            id_subheading = subheading_crud.read().get(combo_subheading.getSelectedIndex()).getId();
        } catch (SQLException ex) {
            id_subheading = -1;
        }
        return id_subheading;
    }

    /**
     * Redéfinie la taille de la fenêtre
     * ------------------------------------------------------------------------
     * Réinisialise les erreurs
     * ------------------------------------------------------------------------
     * Réinisialise les valeurs dans les champs
     * ------------------------------------------------------------------------
     * Réinisialise la couleur des bordures
     */
    public void reset_form() {
        setSize(980, 540);
        error_form.setText("");
        name.setText("");
        description.setText("");
        price_bt.setText("");
        quantity.setText("");
        taxe.setText("");
        chooser.setName("");
        name.setBorder(border_original);
        description.setBorder(border_original);
        price_bt.setBorder(border_original);
        quantity.setBorder(border_original);
        taxe.setBorder(border_original);
        chooser.setSelectedFile(null);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface_product.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface_product.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface_product.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface_product.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface_product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox<String> combo_subheading;
    private javax.swing.JComboBox<String> combo_suppliers;
    private javax.swing.JButton delete;
    private javax.swing.JTextArea description;
    private javax.swing.JLabel error_form;
    private javax.swing.JLabel error_photo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField name;
    private javax.swing.JButton photo;
    private javax.swing.JTextField price_bt;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField taxe;
    private javax.swing.JLabel title_form;
    private javax.swing.JButton update;
    private javax.swing.JButton validate;
    // End of variables declaration//GEN-END:variables
}
